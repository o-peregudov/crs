#ifndef CROSS_DEFSYS_H_INCLUDED
#define CROSS_DEFSYS_H_INCLUDED 1
//	2010-12-17	default integer types
//	2010-12-26	WINVER define for Win32API
//	2011-01-18	use of autoconf's substitutions
//	2011-03-06	additional check for building static library only

#define HAVE_WIN32_API @HAVE_WIN32_API@
#define HAVE_POSIX_API @HAVE_POSIX_API@
#define HAVE_CPP0X_API @HAVE_CPP0X_API@

#define HAVE_STDINT_H @HAVE_STDINT_H@
#define HAVE_INTTYPES_H @HAVE_INTTYPES_H@
#define HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@
#define HAVE_WINSOCK2_H @HAVE_WINSOCK2_H@

#define DEFINE_CROSS_EXPORT @DEFINE_CROSS_EXPORT@
#if DEFINE_CROSS_EXPORT
#	define CROSS_EXPORT
#endif

#if defined( _MSC_VER )
#	pragma warning( disable : 4251 )
#	pragma warning( disable : 4275 )
#	pragma warning( disable : 4996 )
#	define USE_WIN32_API 1
#else
#	if HAVE_WIN32_API
#		define USE_WIN32_API 1
#	elif HAVE_POSIX_API
#		define USE_POSIX_API 1
#	endif
#	if HAVE_CPP0X_API
#		define USE_CPPoX_API 1
#	endif
#endif

#if defined( USE_WIN32_API )
#	ifndef WINVER
#		define WINVER 0x0502		// Allow use of features specific to Windows Server 2003 or later.
#	endif
#	ifndef _WIN32_WINNT
#		define _WIN32_WINNT 0x0502	// Allow use of features specific to Windows Server 2003 or later.
#	endif
#	ifndef _WIN32_WINDOWS
#		define _WIN32_WINDOWS 0x0410	// Allow use of features specific to Windows 98 or later.
#	endif
#	ifndef _WIN32_IE
#		define _WIN32_IE 0x0600		// Allow use of features specific to IE 6.0 or later.
#	endif
#endif

#if HAVE_STDINT_H
#	include <stdint.h>
#endif
#if HAVE_INTTYPES_H
#	include <inttypes.h>
#endif
#if HAVE_SYS_TYPES_H
#	include <sys/types.h>
#endif
#if STDC_HEADERS
#	include <stdlib.h>
#	include <stddef.h>
#endif
#if HAVE_WINSOCK2_H
#	include <winsock2.h>
#elif defined( USE_WIN32_API )
#	include <windows.h>
#endif

#if defined( _MSC_VER )
	typedef CHAR crs_int8_t;
	typedef SHORT crs_int16_t;
	typedef INT32 crs_int32_t;
	typedef INT64 crs_int64_t;
	
	typedef BYTE crs_uint8_t;
	typedef WORD crs_uint16_t;
	typedef DWORD crs_uint32_t;
#else
	typedef @SIZE8@ crs_int8_t;
	typedef @SIZE16@ crs_int16_t;
	typedef @SIZE32@ crs_int32_t;
	typedef @SIZE64@ crs_int64_t;
	
	typedef @USIZE8@ crs_uint8_t;
	typedef @USIZE16@ crs_uint16_t;
	typedef @USIZE32@ crs_uint32_t;
#endif

#endif // CROSS_DEFSYS_H_INCLUDED
